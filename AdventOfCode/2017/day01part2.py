# Advent of Code
# Day 1 Part 2, Written on December 7, 2017 (whomp whomp), by Danny Brown

# This program reviews a sequence of digits and checks against a digit halfway
# around the sequence. If the numbers match, they are added to the total.

sequence = ('649713959682898259577777982349515784822684939966191359164369933'
            '435366431847754488661965363557985166219358714739318371382388296'
            '151195361571216131925158492441461844687324923315381358331571577'
            '613789649166486152237945917987977793891739865149734755993241361'
            '886336926538482271124755359572791451335842534893192693558659991'
            '171983849285489139421425933638614884415896938914992732492192458'
            '636484523228244532331587584779552788544667253577324649915274115'
            '924611758345676183443982992733966373498385685965768929241477983'
            '727921279826727976872556315428434799161759734932659829934562339'
            '385328119656823483954856427365892627728163524721467938449943358'
            '192632262354854593635831559352247443975945144163183563723562891'
            '357859367964126289445982135523535923113589316417623483631637569'
            '291941782992213889513714525342468563349385271884221685549996534'
            '333765731243895662624829924982971685443825366827923589435254514'
            '211489649482374876434549682785459698885521673258939413255158196'
            '525696236457911447599947449665542554251486847388823576937167237'
            '476556782133227279324526834946534444718161524129285919477959937'
            '684728882592779941734186144138883994322742484853925383518651687'
            '147246943421311287324867663698432546619583638976637733345251834'
            '869985746385371617743498627111441933546356934671639545342515392'
            '536574744795732243617113574641284231928489312683617154536648219'
            '244996491745718658151648246791826466973654765284263928884137863'
            '647623237345882469142933142637583644258427416972595241737254449'
            '718531724176538648369253796688931245191382956961544775856872281'
            '317743828552629843551844927913147518377362266554334386721313244'
            '223233396453291224932499277961525785755863852487141946626663835'
            '195286762947172384186667439516367219391823774338692151926472717'
            '373235612911848773387771244144969149482477519437822863422662157'
            '461968444281972353149695515494992537927492111388193837553844671'
            '719291482442337761321272333982924289323437277224565149928416255'
            '435841327756139118119744528993269157174414264387573331116323982'
            '614862952264597611885999285995516357519648695594299657387614793'
            '341626318866519144574571816535351149394735916975448425618171572'
            '917195165594323552199346814729617189679698944337146')

test1 = '1212' # 6
test2 = '1221' # 0
test3 = '123425' # 4
test4 = '123123' # 12
test5 = '12131415' # 4

def find_the_total(sequence):
    total = 0
    for digit in range(0, len(sequence)):
        if digit < len(sequence)/2:
            if sequence[digit] == sequence[digit + len(sequence)/2]:
                total += int(sequence[digit])
        elif digit >= len(sequence)/2:
            if sequence[digit] == sequence[digit - len(sequence)/2]:
                total += int(sequence[digit])
    return total

answer = find_the_total(sequence)
print answer

